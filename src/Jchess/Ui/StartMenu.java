/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Jchess.Ui;

import Jchess.Models.UserPreferences;
import Jchess.Core.Constants;
import Jchess.Enums.ThemeType;
import Jchess.Models.Factory;
import Jchess.Ui.EventMapping.StartDelegate;

/**
 * The Doki Chess start menu
 * @author Wesley
 */
public class StartMenu extends javax.swing.JFrame {

    private boolean dokiTheme;
    private final StartDelegate startClickHandler;
    
    /**
     * Creates new form StartMenu.
     * @param startHandler
     */
    public StartMenu(StartDelegate startHandler) {
        initComponents();
        
        this.txtPlayer1Name.setText(UserPreferences.getValue(Constants.PLAYER_ONE_KEY, "Sith Rochowiak"));
        this.txtPlayer2Name.setText(UserPreferences.getValue(Constants.PLAYER_TWO_KEY, "Father Coleman"));

        dokiTheme = "doki".equals(UserPreferences.getValue(Constants.THEME_KEY, "normal"));
        this.rbDoki.setSelected(dokiTheme);
        this.rbThemeNormal.setSelected(!dokiTheme);

        this.startClickHandler = startHandler;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPlayer1Name = new javax.swing.JTextField();
        txtPlayer2Name = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        rbDoki = new javax.swing.JRadioButton();
        rbThemeNormal = new javax.swing.JRadioButton();
        btnStart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Curlz MT", 2, 36)); // NOI18N
        jLabel1.setText("Doki Doki Chess");

        txtPlayer1Name.setText("Player1Name");

        txtPlayer2Name.setText("Player2Name");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        rbDoki.setText("Doki Doki");
        rbDoki.setToolTipText("");
        rbDoki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDokiActionPerformed(evt);
            }
        });

        rbThemeNormal.setText("Normal");
        rbThemeNormal.setToolTipText("");
        rbThemeNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbThemeNormalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(rbThemeNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbDoki, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbDoki)
                    .addComponent(rbThemeNormal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPlayer1Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPlayer2Name, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPlayer2Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlayer1Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(btnStart)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        String nameOfPlayerOne = txtPlayer1Name.getText();
        String nameOfPlayerTwo = txtPlayer2Name.getText();
        ThemeType theme = dokiTheme ? ThemeType.Doki : ThemeType.Normal;
        
        UserPreferences.setValue(Constants.PLAYER_TWO_KEY, nameOfPlayerTwo);
        UserPreferences.setValue(Constants.PLAYER_ONE_KEY, nameOfPlayerOne);
        UserPreferences.setValue(Constants.THEME_KEY, theme.getName());

        this.startClickHandler.didStart(Factory.readFENFromFile("starter.fen"), theme);

        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnStartActionPerformed

    private void rbThemeNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbThemeNormalActionPerformed
        if (this.rbDoki.isSelected()) {
            this.rbDoki.setSelected(false);
        }
        this.rbThemeNormal.setSelected(true);
        dokiTheme = false;
    }//GEN-LAST:event_rbThemeNormalActionPerformed

    private void rbDokiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDokiActionPerformed
        if (this.rbThemeNormal.isSelected()) {
            this.rbThemeNormal.setSelected(false);
        }
        this.rbDoki.setSelected(true);
        dokiTheme = true;
    }//GEN-LAST:event_rbDokiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rbDoki;
    private javax.swing.JRadioButton rbThemeNormal;
    private javax.swing.JTextField txtPlayer1Name;
    private javax.swing.JTextField txtPlayer2Name;
    // End of variables declaration//GEN-END:variables
}
